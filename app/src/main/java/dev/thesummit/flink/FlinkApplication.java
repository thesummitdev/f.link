/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dev.thesummit.flink;

import dev.thesummit.flink.database.ConnectionPool;
import dev.thesummit.flink.database.FlinkConnectionPool;
// import dev.thesummit.flink.handlers.LinkHandler;
import io.javalin.Javalin;
import io.javalin.apibuilder.*;
import java.io.IOException;
import java.sql.SQLException;

public class FlinkApplication {
  // TODO: Change these to OS ENV parameters.
  static final String DB_URL = "jdbc:postgresql://localhost:5432/flink-dev";
  static final String DB_USER = "tyler";
  static final String DB_PASSWORD = "";
  private static FlinkApplication appContext = null;
  public ConnectionPool pool = null;

  public static FlinkApplication create() {

    if (FlinkApplication.appContext == null) {

      appContext = new FlinkApplication();

      try {
        appContext.pool =
            FlinkConnectionPool.create(
                FlinkApplication.DB_URL, FlinkApplication.DB_USER, FlinkApplication.DB_PASSWORD);
      } catch (SQLException e) {
        throw new RuntimeException("Unable to connected to database", e);
      }
    }

    return appContext;
  }

  public static FlinkApplication getContext() {
    return appContext;
  }

  public static void main(String[] args) throws IOException {
    Javalin app =
        Javalin.create(
            config -> {
              config.enableDevLogging();
              // config.addStaticFiles("static");
            });
    app.get("/", ctx -> ctx.result("Hello World"));
    app.routes(
        () -> {
          // ApiBuilder.crud("links/:id", new LinkHandler());
        });
    // app.before("links", (ctx) -> LinkHandler.before(ctx));
    // app.after("links", (ctx) -> LinkHandler.after(ctx));
    // app.before("links/*", (ctx) -> LinkHandler.before(ctx));
    // app.after("links/*", (ctx) -> LinkHandler.after(ctx));

    FlinkApplication.create(); // Init app and database pool.
    app.start(8000); // Start listening for http requests.
  }
}
